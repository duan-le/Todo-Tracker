{"version":3,"sources":["components/Button.js","components/Header.js","components/Todo.js","components/Todos.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAddTodo","Todo","todo","onDelete","onToggle","reminder","onDoubleClick","id","cursor","date","Todos","todos","map","AddTodo","useState","setText","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","today","Date","day","getDate","month","toLocaleString","year","getFullYear","setTodos","length","nextTodoID","setNextTodoID","setShowAddTodo","newTodo","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9fa82d.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{ backgroundColor: color }}\r\n        onClick={onClick}\r\n        className=\"btn\"\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"black\",\r\n  text: \"Button\",\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAddTodo }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAddTodo ? \"red\" : \"green\"}\r\n        text={showAddTodo ? \"Close\" : \"Add\"}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"To-Do Tracker\",\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Todo = ({ todo, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`todo ${todo.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(todo.id)}\r\n    >\r\n      <h3>\r\n        {todo.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(todo.id)}\r\n        />\r\n      </h3>\r\n      <p>{todo.date}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\";\r\n\r\nconst Todos = ({ todos, onDelete, onToggle }) => {\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTodo = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add a to-do item.\");\r\n      return;\r\n    }\r\n    onAdd({ text, date, reminder });\r\n    setText(\"\");\r\n    setDate(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>To-do:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Required\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Not Required\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Highlight:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\n\n// let nextTodoID = 3;\n\nfunction App() {\n  const today = new Date();\n  const day = today.getDate();\n  const month = today.toLocaleString(\"default\", { month: \"long\" });\n  const year = today.getFullYear();\n  const date = `${month} ${day}, ${year}`;\n\n  const [todos, setTodos] = useState([\n    {\n      id: 0,\n      text: \"Click the green 'Add' button to add a to-do item.\",\n      date: date,\n      reminder: false,\n    },\n    {\n      id: 1,\n      text: \"Click the red 'x' remove a to-do item.\",\n      date: date,\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Double click the to-do item to toggle the highlight function.\",\n      date: date,\n      reminder: false,\n    },\n  ]);\n\n  const [nextTodoID, setNextTodoID] = useState(todos.length);\n\n  const [showAddTodo, setShowAddTodo] = useState(false);\n\n  // Add todo\n  const addTodo = (todo) => {\n    const id = nextTodoID;\n    setNextTodoID(nextTodoID + 1);\n    const newTodo = { id, ...todo };\n    setTodos([...todos, newTodo]);\n  };\n\n  // Delete todo\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, reminder: !todo.reminder } : todo\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTodo(!showAddTodo)}\n        showAddTodo={showAddTodo}\n      />\n      {showAddTodo ? <AddTodo onAdd={addTodo} /> : \"\"}\n      <Todos todos={todos} onDelete={deleteTodo} onToggle={toggleReminder} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}